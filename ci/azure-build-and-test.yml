# Main build jobs for CI/CD on Azure Pipelines.

parameters:
- name: builds
  type: object
  default:

  - name: linux_38
    vmImage: ubuntu-20.04
    vars:
      PYTHON_SERIES: "3.8"

  - name: linux_39
    vmImage: ubuntu-20.04
    vars:
      PYTHON_SERIES: "3.9"

  - name: macos_38
    vmImage: macos-10.15
    vars:
      PYTHON_SERIES: "3.8"

  - name: macos_39
    vmImage: macos-10.15
    vars:
      PYTHON_SERIES: "3.9"

  - name: windows_38
    vmImage: windows-2019
    vars:
      PYTHON_SERIES: "3.8"

  - name: windows_39
    vmImage: windows-2019
    vars:
      PYTHON_SERIES: "3.9"

jobs:
- ${{ each build in parameters.builds }}:
  - job: ${{ format('build_{0}', build.name) }}
    pool:
      vmImage: ${{ build.vmImage }}
    variables:
      ${{ insert }}: ${{ build.vars }}
    steps:

    - template: azure-job-setup.yml
      parameters:
        setupBuild: true

    - bash: |
        set -euo pipefail
        source activate-conda.sh
        set -x
        \conda create -y -n build setuptools pip python="$PYTHON_SERIES"
        conda activate build
        pip install $BASH_WORKSPACE/sdist/*.tar.gz
      displayName: Install from sdist

    - bash: |
        set -euo pipefail
        source activate-conda.sh
        conda activate build
        set -x

        if [[ $AGENT_OS == Windows_NT ]] ; then
          \conda install -y astropy pytest
        else
          \conda install -y astropy healpy pyavm pytest
        fi

        pytest --pyargs toasty
      displayName: Test

- job: coverage
  pool:
    vmImage: ubuntu-20.04
  steps:
  - template: azure-job-setup.yml
    parameters:
      setupBuild: true

  # For most build variations we try to install all deps via `pip` to make sure
  # that the setuptools metadata are good. But for the coverage run, we want to
  # install every esoteric dependency we can get our hands on, and it's faster
  # and more reliable do to that with conda. Since mixing-and-matching can cause
  # crashes, as seen in #68 with shapely, here we aim to do *everything* with
  # conda.
  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      \conda create -y -n build \
        cython \
        filelock \
        glymur \
        healpy \
        numpy \
        openexr-python \
        pillow \
        pip \
        pyavm \
        pytest-cov \
        python=3.9 \
        pyyaml \
        reproject \
        setuptools \
        shapely \
        tqdm \
        wwt_data_formats
    displayName: Install dependencies with conda

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      conda activate build
      pip install -e .
    displayName: Install in developer mode

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      conda activate build
      set -x
      pytest --cov-report=xml --cov=toasty toasty
    displayName: Test with coverage

  - bash: bash <(curl -s https://codecov.io/bash)
    displayName: Upload coverage results

- job: docs
  pool:
    vmImage: ubuntu-20.04
  steps:
  - template: azure-job-setup.yml
    parameters:
      setupBuild: true

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      set -x
      \conda create -y -n build setuptools pip python=3.8
      conda activate build
      pip install $BASH_WORKSPACE/sdist/*.tar.gz
    displayName: Install from sdist

  - bash: |
      set -euo pipefail
      source activate-conda.sh
      conda activate build
      set -x
      \conda install -y astropy numpydoc sphinx sphinx-automodapi
      pip install astropy-sphinx-theme
      cd docs
      make html

      # 2022 Sep - turning off link check because dotnetfoundation.org expired
      # HTTPS cert is causing problems
      #make linkcheck
    displayName: Build docs
